<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z_tier = 0;
z_spawning_time = controller.difficulty_setting.spawning_time * room_speed;
z_direction = "RIGHT";
z_min_land_height = 256;
z_max_land_height = room_height;
z_zombies_to_spawn = 2;
z_zobies_increment = controller.difficulty_setting.spawning_zombies_increase;


z_tier_zero_enemy_list[0] = zombie;
z_enemy_list[0] = z_tier_zero_enemy_list;
z_necromancers_to_spawn = 1;

alarm[0] = z_spawning_time;
z_total_spawned = 0;
z_wave = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z_wave++;
z_enemy = irandom(array_height_2d(z_enemy_list[z_tier])-1)

for(var i = 0; i &lt; z_zombies_to_spawn; i++){
    instance_create(x, random_range(z_min_land_height, z_max_land_height), zombie);    
    instance_create(0, random_range(z_min_land_height, z_max_land_height), zombie);
}

z_zombies_to_spawn += z_zobies_increment;
z_total_spawned++;
if(z_total_spawned % 10==0 &amp;&amp; z_total_spawned &gt;= 15){
    z_spawning_time*=0.95;
}
if(z_spawning_time &lt; 1){
    z_spawning_time = 1;
}

if(z_wave == controller.difficulty_setting.spawning_necromancer_every_nth_wave ){
    var to_spawn = z_necromancers_to_spawn;
    for(var i = 0; i &lt; to_spawn; i++){
        instance_create(x, random_range(z_min_land_height, z_max_land_height), necromancer);
        instance_create(0, random_range(z_min_land_height, z_max_land_height), necromancer);
    }
    z_wave = 0;
    z_necromancers_to_spawn+=controller.difficulty_setting.spawning_necromancer_increase;
}
alarm[0] = z_spawning_time;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
